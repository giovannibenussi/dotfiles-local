snippet cons "React Component constructor" b
constructor(props) {
  super(props);

  this.state = {${1}}
}

endsnippet

snippet fnc "React Component function" b
${1:name}(props) {
}

endsnippet

snippet fn "function" b
${1:name} = (${2:args}) => {
}

endsnippet

snippet cl "console log" b
console.log('${1}', $1)
endsnippet

snippet ccl "console log" b
console.log('${1}')
endsnippet

snippet fco "function component" b
import React from 'react'

function $1 () {
  return (
    <div>
      Hi
    </div>
  )
}

export default $1
endsnippet

snippet fcos "styled function component" b
import React from 'react'
import styled from '@emotion/styled'

const Wrapper = styled.div\`
\`

function $1 () {
  return (
    <Wrapper>
      Hi
    </Wrapper>
  )
}

export default $1
endsnippet

snippet use "useState hook" b
const [${1:state}, `!p snip.rv = 'set' + (t[1][0].title() if t[1] else '') + (t[1][1:] if t[1] else '') + "] = useState("`${2:''})
endsnippet

snippet deco "styled component decorator" b
.addDecorator(storyFn => <div style={{ textAlign: 'center' }}>{storyFn()}</div>)
endsnippet

snippet query "Query component generator" b

endsnippet

snippet wp "styled component" b
const Wrapper = styled.div\`
	${1}
\`
endsnippet
snippet st "styled component" b
const ${1:Wrapper} = styled.${2:div}\`
	${3}
\`
endsnippet

snippet fs "font-size" b
font-size: ${1:1rem};
endsnippet

snippet fw "font-weight" b
font-weight: ${1:bold};
endsnippet

snippet flex "flex" b
display: flex;
flex-direction: row;
endsnippet

snippet bs "box-sizing" b
box-sizing: border-box;
endsnippet

snippet bg "background" b
background: ${1:red};
endsnippet

snippet bo "border" b
border: 1px solid ${1:red};
endsnippet

snippet br "border-radius" b
border-radius: ${1:5px};
endsnippet

snippet bb "border-bottom" b
border-bottom: ${1:1px} solid ${2:gray};
endsnippet

snippet mb "margin-bottom" b
margin-bottom: ${1:0.5rem};
endsnippet

snippet mt "margin-top" b
margin-top: ${1:0.5rem};
endsnippet

snippet ml "margin-left" b
margin-left: ${1:1rem};
endsnippet

snippet mr "margin-right" b
margin-right: ${1:1rem};
endsnippet

snippet ct "console.table" b
console.table({ ${1} })
endsnippet

snippet prop "styled components prop" b
${props => props.${1}}
endsnippet

snippet deb "debugger" b
        // eslint-disable-next-line
        debugger
endsnippet

snippet sb "storybook" b
import React from 'react'
import { storiesOf } from '@storybook/react'
import $1 from '.'

storiesOf('$1', module)
  .add('default', () => <$1 />)
endsnippet

snippet imp "import" b
import ${1} from './$1'
endsnippet

snippet icmp "import" b
const ${1:Component} = () => (
	<div>
		Hi
	</div>
)
endsnippet

snippet ofh "onClick" i
 onClick={() => console.log('onClick')} 
endsnippet

snippet ofk "onClick" i
 onClick={${1:onClick}} 
endsnippet

snippet ona "onClick" i
 ${1:onClick}={() => ${2:console.log('${3:$1}')}}} 
endsnippet

snippet onc "onClick" i
 onChange={(e) => ${1:setValue}(e.target.value)} 
endsnippet

snippet sp "cp" i
<$1 />
endsnippet

snippet stp "cp" i
${(props) => props.${1:test} ? '' : ''};
endsnippet

snippet stpp "cp" i
${1:background}: ${(props) => props.${2:test} || ''};
endsnippet

snippet sl "cp" i
const ${1:variable} = ${2:test}
endsnippet
